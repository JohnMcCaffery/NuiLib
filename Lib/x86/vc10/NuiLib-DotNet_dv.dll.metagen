ImageRuntimeVersion: v4.0.30319
Assembly NuiLib-DotNet_dv, Version=1.0.*, Culture=Invariant Language (Invariant Country): 
	hash=SHA1, flags=PublicKey
Assembly mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Core, Version=3.5.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly Microsoft.VisualC, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a: 
	hash=None, flags=None
Assembly mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly Microsoft.VisualC, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a: 
	hash=None, flags=None
Class NuiLibDotNet.ChangeDelegate: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, SpecialName, RTSpecialName
  Methods:
    Invoke(): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    BeginInvoke(AsyncCallback, Object): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Final, Virtual, VtableLayoutMask
Class NuiLibDotNet.SkeletonTrackDelegate: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, SpecialName, RTSpecialName
  Methods:
    Invoke(Int32): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    BeginInvoke(Int32, AsyncCallback, Object): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Final, Virtual, VtableLayoutMask
Class NuiLibDotNet.Observable: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Events:
    NuiLibDotNet.ChangeDelegate OnChange: SpecialName
  Methods:
    add_OnChange(ChangeDelegate): PrivateScope, Public, HideBySig, SpecialName
    remove_OnChange(ChangeDelegate): PrivateScope, Public, HideBySig, SpecialName
    raise_OnChange(): PrivateScope, Public, HideBySig, SpecialName
Class NuiLibDotNet.Scalar: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NuiLibDotNet.Observable
  Fields:
    NuiLibSafe.SafeScalar* _ps : Public
    NuiLibDotNet.ChangeDelegate _managedCallback : Public
  Properties:
    Single Value 'get set' : 
    System.String Name 'get ' : 
  Methods:
    Create(String, Single): PrivateScope, Public, Static, HideBySig
    Create(Single): PrivateScope, Public, Static, HideBySig
    Create(SafeScalar*): PrivateScope, Public, Static, HideBySig
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(Single): PrivateScope, Public, HideBySig, SpecialName
    op_Addition(Single, Scalar): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Addition(Scalar, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Addition(Scalar, Scalar): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(Single, Scalar): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(Scalar, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(Scalar, Scalar): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Single, Scalar): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Scalar, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Scalar, Scalar): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(Single, Scalar): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(Scalar, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(Scalar, Scalar): PrivateScope, Public, Static, HideBySig, SpecialName
    op_AdditionAssignment(Scalar, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_AdditionAssignment(Scalar, Scalar): PrivateScope, Public, Static, HideBySig, SpecialName
    op_SubtractionAssignment(Scalar, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_SubtractionAssignment(Scalar, Scalar): PrivateScope, Public, Static, HideBySig, SpecialName
    op_MultiplicationAssignment(Scalar, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_MultiplicationAssignment(Scalar, Scalar): PrivateScope, Public, Static, HideBySig, SpecialName
    op_DivisionAssignment(Scalar, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_DivisionAssignment(Scalar, Scalar): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Scalar, Scalar): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Scalar, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Single, Scalar): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(Scalar, Scalar): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(Scalar, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(Single, Scalar): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LessThanOrEqual(Scalar, Scalar): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LessThanOrEqual(Scalar, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LessThanOrEqual(Single, Scalar): PrivateScope, Public, Static, HideBySig, SpecialName
    op_GreaterThan(Scalar, Scalar): PrivateScope, Public, Static, HideBySig, SpecialName
    op_GreaterThan(Scalar, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_GreaterThan(Single, Scalar): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LessThan(Scalar, Scalar): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LessThan(Scalar, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LessThan(Single, Scalar): PrivateScope, Public, Static, HideBySig, SpecialName
    op_GreaterThanOrEqual(Scalar, Scalar): PrivateScope, Public, Static, HideBySig, SpecialName
    op_GreaterThanOrEqual(Scalar, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_GreaterThanOrEqual(Single, Scalar): PrivateScope, Public, Static, HideBySig, SpecialName
Class NuiLibDotNet.Vector: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NuiLibDotNet.Observable
  Fields:
    NuiLibDotNet.ChangeDelegate _managedCallback : Public
    NuiLibSafe.SafeVector* _ps : Public
  Properties:
    Single Z   'get set' : 
    Single Y   'get set' : 
    Single X   'get set' : 
    System.String Name 'get ' : 
  Methods:
    Create(String, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    Create(Single, Single, Single): PrivateScope, Public, Static, HideBySig
    Create(String, Single): PrivateScope, Public, Static, HideBySig
    Create(Single): PrivateScope, Public, Static, HideBySig
    Create(SafeVector*): PrivateScope, Public, Static, HideBySig
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_X(): PrivateScope, Public, HideBySig, SpecialName
    set_X(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Y(): PrivateScope, Public, HideBySig, SpecialName
    set_Y(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Z(): PrivateScope, Public, HideBySig, SpecialName
    set_Z(Single): PrivateScope, Public, HideBySig, SpecialName
    Set(Single, Single, Single): PrivateScope, Public, HideBySig
    op_Addition(Single, Vector): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Addition(Vector, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Addition(Vector, Vector): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(Single, Vector): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(Vector, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(Vector, Vector): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Single, Vector): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Vector, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Vector, Vector): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(Single, Vector): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(Vector, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(Vector, Vector): PrivateScope, Public, Static, HideBySig, SpecialName
    op_AdditionAssignment(Vector, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_AdditionAssignment(Vector, Vector): PrivateScope, Public, Static, HideBySig, SpecialName
    op_SubtractionAssignment(Vector, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_SubtractionAssignment(Vector, Vector): PrivateScope, Public, Static, HideBySig, SpecialName
    op_MultiplicationAssignment(Vector, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_MultiplicationAssignment(Vector, Vector): PrivateScope, Public, Static, HideBySig, SpecialName
    op_DivisionAssignment(Vector, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_DivisionAssignment(Vector, Vector): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Vector, Vector): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Vector, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Single, Vector): PrivateScope, Public, Static, HideBySig, SpecialName
Class NuiLibDotNet.Condition: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NuiLibDotNet.Observable
  Fields:
    NuiLibSafe.SafeCondition* _ps : Public
    NuiLibDotNet.ChangeDelegate _managedCallback : Public
  Properties:
    Boolean Value 'get set' : 
    System.String Name 'get ' : 
  Methods:
    Create(String, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    Create(Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    Create(SafeCondition*): PrivateScope, Public, Static, HideBySig
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    op_LogicalNot(Condition): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LogicalAnd(Boolean(HasFieldMarshal), Condition): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LogicalAnd(Condition, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LogicalAnd(Condition, Condition): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LogicalOr(Boolean(HasFieldMarshal), Condition): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LogicalOr(Condition, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LogicalOr(Condition, Condition): PrivateScope, Public, Static, HideBySig, SpecialName
    And(Boolean(HasFieldMarshal), Condition): PrivateScope, Public, Static, HideBySig
    And(Condition, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    And(Condition, Condition): PrivateScope, Public, Static, HideBySig
    Or(Boolean(HasFieldMarshal), Condition): PrivateScope, Public, Static, HideBySig
    Or(Condition, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    Or(Condition, Condition): PrivateScope, Public, Static, HideBySig
Class NuiLibDotNet.Nui: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 Hip_Centre : Public, Static
    Int32 Spine : Public, Static
    Int32 Shoulder_Centre : Public, Static
    Int32 Head : Public, Static
    Int32 Shoulder_Left : Public, Static
    Int32 Elbow_Left : Public, Static
    Int32 Wrist_Left : Public, Static
    Int32 Hand_Left : Public, Static
    Int32 Shoulder_Right : Public, Static
    Int32 Elbow_Right : Public, Static
    Int32 Wrist_Right : Public, Static
    Int32 Hand_Right : Public, Static
    Int32 Hip_Left : Public, Static
    Int32 Knee_Left : Public, Static
    Int32 Ankle_Left : Public, Static
    Int32 Foot_Left : Public, Static
    Int32 Hip_Right : Public, Static
    Int32 Knee_Right : Public, Static
    Int32 Ankle_Right : Public, Static
    Int32 Foot_Right : Public, Static
  Properties:
    Boolean HasSkeleton 'get ' : 
  Events:
    NuiLibDotNet.SkeletonTrackDelegate SkeletonSwitched: SpecialName
    NuiLibDotNet.SkeletonTrackDelegate SkeletonLost: SpecialName
    NuiLibDotNet.SkeletonTrackDelegate SkeletonFound: SpecialName
    NuiLibDotNet.ChangeDelegate Tick: SpecialName
  Methods:
    add_Tick(ChangeDelegate): PrivateScope, Public, Static, HideBySig, SpecialName
    remove_Tick(ChangeDelegate): PrivateScope, Public, Static, HideBySig, SpecialName
    raise_Tick(): PrivateScope, Public, Static, HideBySig, SpecialName
    add_SkeletonFound(SkeletonTrackDelegate): PrivateScope, Public, Static, HideBySig, SpecialName
    remove_SkeletonFound(SkeletonTrackDelegate): PrivateScope, Public, Static, HideBySig, SpecialName
    raise_SkeletonFound(Int32): PrivateScope, Public, Static, HideBySig, SpecialName
    add_SkeletonLost(SkeletonTrackDelegate): PrivateScope, Public, Static, HideBySig, SpecialName
    remove_SkeletonLost(SkeletonTrackDelegate): PrivateScope, Public, Static, HideBySig, SpecialName
    raise_SkeletonLost(Int32): PrivateScope, Public, Static, HideBySig, SpecialName
    add_SkeletonSwitched(SkeletonTrackDelegate): PrivateScope, Public, Static, HideBySig, SpecialName
    remove_SkeletonSwitched(SkeletonTrackDelegate): PrivateScope, Public, Static, HideBySig, SpecialName
    raise_SkeletonSwitched(Int32): PrivateScope, Public, Static, HideBySig, SpecialName
    get_HasSkeleton(): PrivateScope, Public, Static, HideBySig, SpecialName
    Init(): PrivateScope, Public, Static, HideBySig
    Pause(): PrivateScope, Public, Static, HideBySig
    SetAutoPoll(Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    Poll(): PrivateScope, Public, Static, HideBySig
    Close(): PrivateScope, Public, Static, HideBySig
    x(Vector): PrivateScope, Public, Static, HideBySig
    y(Vector): PrivateScope, Public, Static, HideBySig
    z(Vector): PrivateScope, Public, Static, HideBySig
    magnitude(Vector): PrivateScope, Public, Static, HideBySig
    dot(Vector, Vector): PrivateScope, Public, Static, HideBySig
    normalize(Vector): PrivateScope, Public, Static, HideBySig
    normalize(Scalar, Scalar): PrivateScope, Public, Static, HideBySig
    normalize(Scalar, Single): PrivateScope, Public, Static, HideBySig
    normalize(Scalar): PrivateScope, Public, Static, HideBySig
    constrain(Scalar, Scalar, Scalar, Scalar, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    constrain(Scalar, Scalar, Scalar, Single, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    constrain(Scalar, Scalar, Single, Scalar, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    constrain(Scalar, Scalar, Single, Single, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    constrain(Scalar, Single, Scalar, Scalar, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    constrain(Scalar, Single, Scalar, Single, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    constrain(Scalar, Single, Single, Scalar, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    constrain(Scalar, Single, Single, Single, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    abs(Scalar): PrivateScope, Public, Static, HideBySig
    acos(Scalar): PrivateScope, Public, Static, HideBySig
    invert(Condition): PrivateScope, Public, Static, HideBySig
    delta(Vector): PrivateScope, Public, Static, HideBySig
    delta(Scalar): PrivateScope, Public, Static, HideBySig
    project(Vector, Vector): PrivateScope, Public, Static, HideBySig
    ifScalar(Condition, Scalar, Scalar): PrivateScope, Public, Static, HideBySig
    ifScalar(Condition, Scalar, Single): PrivateScope, Public, Static, HideBySig
    ifScalar(Condition, Single, Scalar): PrivateScope, Public, Static, HideBySig
    ifScalar(Condition, Single, Single): PrivateScope, Public, Static, HideBySig
    tracker(String, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    cross(Vector, Vector): PrivateScope, Public, Static, HideBySig
    limit(Vector, Boolean(HasFieldMarshal), Boolean(HasFieldMarshal), Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    snapshot(Vector, Condition): PrivateScope, Public, Static, HideBySig
    momentum(Vector, Condition, Single, Single): PrivateScope, Public, Static, HideBySig
    momentum(Vector, Condition): PrivateScope, Public, Static, HideBySig
    scale(Vector, Single): PrivateScope, Public, Static, HideBySig
    scale(Vector, Scalar): PrivateScope, Public, Static, HideBySig
    intersect(Vector, Vector, Vector, Vector): PrivateScope, Public, Static, HideBySig
    joint(Int32 IsConst): PrivateScope, Public, Static, HideBySig
