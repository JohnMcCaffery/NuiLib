ImageRuntimeVersion: v4.0.30319
Assembly NuiLib-DotNet_dv, Version=1.0.*, Culture=Invariant Language (Invariant Country): 
	hash=SHA1, flags=PublicKey
Assembly mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Core, Version=3.5.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly Microsoft.VisualC, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a: 
	hash=None, flags=None
Assembly mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly Microsoft.VisualC, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a: 
	hash=None, flags=None
Class NuiLibDotNet.NuiFactory: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NuiLibDotNet.OnChangeEvt: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, SpecialName, RTSpecialName
  Methods:
    Invoke(): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    BeginInvoke(AsyncCallback, Object): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Final, Virtual, VtableLayoutMask
Class NuiLibDotNet.Observable: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Events:
    NuiLibDotNet.OnChangeEvt OnChange: SpecialName
  Methods:
    add_OnChange(OnChangeEvt): PrivateScope, Public, HideBySig, SpecialName
    remove_OnChange(OnChangeEvt): PrivateScope, Public, HideBySig, SpecialName
    raise_OnChange(): PrivateScope, Public, HideBySig, SpecialName
Class NuiLibDotNet.DotNetScalar: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NuiLibDotNet.Observable
  Interfaces:
    System.IDisposable
  Fields:
    NuiLibSafe.SafeScalar* _ps : Public
  Properties:
    Single Value 'get set' : 
    System.String Name 'get ' : 
  Methods:
    Create(String, Single): PrivateScope, Public, Static, HideBySig
    Create(Single): PrivateScope, Public, Static, HideBySig
    Create(SafeScalar*): PrivateScope, Public, Static, HideBySig
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(Single): PrivateScope, Public, HideBySig, SpecialName
    op_Addition(Single, DotNetScalar): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Addition(DotNetScalar, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Addition(DotNetScalar, DotNetScalar): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(Single, DotNetScalar): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(DotNetScalar, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(DotNetScalar, DotNetScalar): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Single, DotNetScalar): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(DotNetScalar, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(DotNetScalar, DotNetScalar): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(Single, DotNetScalar): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(DotNetScalar, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(DotNetScalar, DotNetScalar): PrivateScope, Public, Static, HideBySig, SpecialName
    op_AdditionAssignment(DotNetScalar, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_AdditionAssignment(DotNetScalar, DotNetScalar): PrivateScope, Public, Static, HideBySig, SpecialName
    op_SubtractionAssignment(DotNetScalar, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_SubtractionAssignment(DotNetScalar, DotNetScalar): PrivateScope, Public, Static, HideBySig, SpecialName
    op_MultiplicationAssignment(DotNetScalar, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_MultiplicationAssignment(DotNetScalar, DotNetScalar): PrivateScope, Public, Static, HideBySig, SpecialName
    op_DivisionAssignment(DotNetScalar, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_DivisionAssignment(DotNetScalar, DotNetScalar): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(DotNetScalar, DotNetScalar): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(DotNetScalar, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Single, DotNetScalar): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(DotNetScalar, DotNetScalar): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(DotNetScalar, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(Single, DotNetScalar): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LessThanOrEqual(DotNetScalar, DotNetScalar): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LessThanOrEqual(DotNetScalar, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LessThanOrEqual(Single, DotNetScalar): PrivateScope, Public, Static, HideBySig, SpecialName
    op_GreaterThan(DotNetScalar, DotNetScalar): PrivateScope, Public, Static, HideBySig, SpecialName
    op_GreaterThan(DotNetScalar, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_GreaterThan(Single, DotNetScalar): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LessThan(DotNetScalar, DotNetScalar): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LessThan(DotNetScalar, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LessThan(Single, DotNetScalar): PrivateScope, Public, Static, HideBySig, SpecialName
    op_GreaterThanOrEqual(DotNetScalar, DotNetScalar): PrivateScope, Public, Static, HideBySig, SpecialName
    op_GreaterThanOrEqual(DotNetScalar, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_GreaterThanOrEqual(Single, DotNetScalar): PrivateScope, Public, Static, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class NuiLibDotNet.DotNetVector: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NuiLibDotNet.Observable
  Interfaces:
    System.IDisposable
  Fields:
    NuiLibSafe.SafeVector* _ps : Public
  Properties:
    Single Z   'get set' : 
    Single Y   'get set' : 
    Single X   'get set' : 
    System.String Name 'get ' : 
  Methods:
    Create(String, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    Create(Single, Single, Single): PrivateScope, Public, Static, HideBySig
    Create(String, Single): PrivateScope, Public, Static, HideBySig
    Create(Single): PrivateScope, Public, Static, HideBySig
    Create(SafeVector*): PrivateScope, Public, Static, HideBySig
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_X(): PrivateScope, Public, HideBySig, SpecialName
    set_X(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Y(): PrivateScope, Public, HideBySig, SpecialName
    set_Y(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Z(): PrivateScope, Public, HideBySig, SpecialName
    set_Z(Single): PrivateScope, Public, HideBySig, SpecialName
    Set(Single, Single, Single): PrivateScope, Public, HideBySig
    op_Addition(Single, DotNetVector): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Addition(DotNetVector, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Addition(DotNetVector, DotNetVector): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(Single, DotNetVector): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(DotNetVector, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(DotNetVector, DotNetVector): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Single, DotNetVector): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(DotNetVector, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(DotNetVector, DotNetVector): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(Single, DotNetVector): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(DotNetVector, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(DotNetVector, DotNetVector): PrivateScope, Public, Static, HideBySig, SpecialName
    op_AdditionAssignment(DotNetVector, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_AdditionAssignment(DotNetVector, DotNetVector): PrivateScope, Public, Static, HideBySig, SpecialName
    op_SubtractionAssignment(DotNetVector, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_SubtractionAssignment(DotNetVector, DotNetVector): PrivateScope, Public, Static, HideBySig, SpecialName
    op_MultiplicationAssignment(DotNetVector, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_MultiplicationAssignment(DotNetVector, DotNetVector): PrivateScope, Public, Static, HideBySig, SpecialName
    op_DivisionAssignment(DotNetVector, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_DivisionAssignment(DotNetVector, DotNetVector): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(DotNetVector, DotNetVector): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(DotNetVector, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Single, DotNetVector): PrivateScope, Public, Static, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class NuiLibDotNet.DotNetCondition: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NuiLibDotNet.Observable
  Interfaces:
    System.IDisposable
  Fields:
    NuiLibSafe.SafeCondition* _ps : Public
  Properties:
    Boolean Value 'get set' : 
    System.String Condition 'get ' : 
  Methods:
    Create(String, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    Create(Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    Create(SafeCondition*): PrivateScope, Public, Static, HideBySig
    get_Condition(): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    op_LogicalNot(DotNetCondition): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LogicalAnd(Boolean(HasFieldMarshal), DotNetCondition): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LogicalAnd(DotNetCondition, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LogicalAnd(DotNetCondition, DotNetCondition): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LogicalOr(Boolean(HasFieldMarshal), DotNetCondition): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LogicalOr(DotNetCondition, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LogicalOr(DotNetCondition, DotNetCondition): PrivateScope, Public, Static, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class NuiLibDotNet.Nui: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 Hip_Centre : Public, Static
    Int32 Spine : Public, Static
    Int32 Shoulder_Centre : Public, Static
    Int32 Head : Public, Static
    Int32 Shoulder_Left : Public, Static
    Int32 Elbow_Left : Public, Static
    Int32 Wrist_Left : Public, Static
    Int32 Hand_Left : Public, Static
    Int32 Shoulder_Right : Public, Static
    Int32 Elbow_Right : Public, Static
    Int32 Wrist_Right : Public, Static
    Int32 Hand_Right : Public, Static
    Int32 Hip_Left : Public, Static
    Int32 Knee_Left : Public, Static
    Int32 Ankle_Left : Public, Static
    Int32 Foot_Left : Public, Static
    Int32 Hip_Right : Public, Static
    Int32 Knee_Right : Public, Static
    Int32 Ankle_Right : Public, Static
    Int32 Foot_Right : Public, Static
  Methods:
    Init(): PrivateScope, Public, Static, HideBySig
    Pause(): PrivateScope, Public, Static, HideBySig
    SetAutoPoll(Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    x(DotNetVector): PrivateScope, Public, Static, HideBySig
    y(DotNetVector): PrivateScope, Public, Static, HideBySig
    z(DotNetVector): PrivateScope, Public, Static, HideBySig
    magnitude(DotNetVector): PrivateScope, Public, Static, HideBySig
    dot(DotNetVector, DotNetVector): PrivateScope, Public, Static, HideBySig
    normalize(DotNetVector): PrivateScope, Public, Static, HideBySig
    normalize(DotNetScalar, DotNetScalar): PrivateScope, Public, Static, HideBySig
    normalize(DotNetScalar, Single): PrivateScope, Public, Static, HideBySig
    normalize(DotNetScalar): PrivateScope, Public, Static, HideBySig
    constrain(DotNetScalar, DotNetScalar, DotNetScalar, DotNetScalar, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    constrain(DotNetScalar, DotNetScalar, DotNetScalar, Single, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    constrain(DotNetScalar, DotNetScalar, Single, DotNetScalar, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    constrain(DotNetScalar, DotNetScalar, Single, Single, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    constrain(DotNetScalar, Single, DotNetScalar, DotNetScalar, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    constrain(DotNetScalar, Single, DotNetScalar, Single, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    constrain(DotNetScalar, Single, Single, DotNetScalar, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    constrain(DotNetScalar, Single, Single, Single, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    abs(DotNetScalar): PrivateScope, Public, Static, HideBySig
    acos(DotNetScalar): PrivateScope, Public, Static, HideBySig
    invert(DotNetCondition): PrivateScope, Public, Static, HideBySig
    delta(DotNetVector): PrivateScope, Public, Static, HideBySig
    delta(DotNetScalar): PrivateScope, Public, Static, HideBySig
    project(DotNetVector, DotNetVector): PrivateScope, Public, Static, HideBySig
    ifScalar(DotNetCondition, DotNetScalar, DotNetScalar): PrivateScope, Public, Static, HideBySig
    ifScalar(DotNetCondition, DotNetScalar, Single): PrivateScope, Public, Static, HideBySig
    ifScalar(DotNetCondition, Single, DotNetScalar): PrivateScope, Public, Static, HideBySig
    ifScalar(DotNetCondition, Single, Single): PrivateScope, Public, Static, HideBySig
    tracker(String, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    cross(DotNetVector, DotNetVector): PrivateScope, Public, Static, HideBySig
    limit(DotNetVector, Boolean(HasFieldMarshal), Boolean(HasFieldMarshal), Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    snapshot(DotNetVector, DotNetCondition): PrivateScope, Public, Static, HideBySig
    momentum(DotNetVector, DotNetCondition, Single, Single): PrivateScope, Public, Static, HideBySig
    momentum(DotNetVector, DotNetCondition): PrivateScope, Public, Static, HideBySig
    scale(DotNetVector, Single): PrivateScope, Public, Static, HideBySig
    scale(DotNetVector, DotNetScalar): PrivateScope, Public, Static, HideBySig
    intersect(DotNetVector, DotNetVector, DotNetVector, DotNetVector): PrivateScope, Public, Static, HideBySig
    joint(Int32 IsConst): PrivateScope, Public, Static, HideBySig
