# Copyright (c) 2012 John McCaffery 
# 
# This file is part of NuiLib.
# 
# NuiLib is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# NuiLib is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
# 
# You should have received a copy of the GNU Lesser General Public License
# along with NuiLib.  If not, see <http://www.gnu.org/licenses/>.

NAME=NuiLib

# - ROOT DIRECTORIES -
BIN_DIR=Bin/x86/mingw/
INC_DIR=Include/
LIB_DIR=Lib/x86/mingw/
SRC_DIR=Src/

# - SRC DIRECTORIES -
CORE_DIR=$(SRC_DIR)NuiLib/
KINECT_MS_DIR=$(SRC_DIR)NuiLib-Kinect-MS/
TEST_DIR=$(SRC_DIR)Test/
DEMO_BASIC_DIR=$(SRC_DIR)Demo-Basic/
DEMO_ADVANCED_DIR=$(SRC_DIR)Demo-Advanced/
DEMO_SLIDESHOW_DIR=$(SRC_DIR)Demo-Slideshow/
DEMO_MOVEMENT_DIR=$(SRC_DIR)Demo-Movement/
DEMO_MANIPULATION_DIR=$(SRC_DIR)Demo-Manipulation/
UNITTEST_DIR=$(SRC_DIR)UnitTests/

# - CORE FILES -
CORE_SOURCES=$(CORE_DIR)$(NAME)-API.cpp $(CORE_DIR)$(NAME)-Vectors.cpp $(CORE_DIR)$(NAME)-Scalars.cpp $(CORE_DIR)$(NAME)-Conditions.cpp $(CORE_DIR)$(NAME)-HandProcessing.cpp $(CORE_DIR)$(NAME)-Extendable.cpp
MISC_HEADERS=$(INC_DIR)$(NAME)-Operators.h
# - KINECT MS FILES -
KINECT_MS_SOURCES=$(KINECT_MS_DIR)$(NAME)-Kinect-MS.cpp
	
# - DEMO - BASIC FILES -
DEMO_BASIC_SOURCES=$(DEMO_BASIC_DIR)main.cpp
	
# - DEMO - ADVANCED FILES -
DEMO_ADVANCED_SOURCES=$(DEMO_ADVANCED_DIR)main.cpp
	
# - DEMO - SLIDESHOW FILES -
DEMO_SLIDESHOW_SOURCES=$(DEMO_SLIDESHOW_DIR)main.cpp
	
# - DEMO - MOVEMENT FILES -
DEMO_MOVEMENT_SOURCES=$(DEMO_MOVEMENT_DIR)main.cpp
	
# - DEMO - MANIPULATION FILES -
DEMO_MANIPULATION_SOURCES=$(DEMO_MANIPULATION_DIR)main.cpp

# - TEST FILES -
TEST_SOURCES=$(TEST_DIR)main.cpp

# - UNIT TEST FILES -
UNITTEST_SOURCES=$(UNITTEST_DIR)$(NAME)-Test-API.cpp $(UNITTEST_DIR)$(NAME)-Test-Vectors.cpp $(UNITTEST_DIR)$(NAME)-Test-Scalars.cpp $(UNITTEST_DIR)$(NAME)-Test-Main.cpp

# - OUTPUT FILES -

# - G++ -
CORE_F=$(LIB_DIR)$(NAME)
KINECT_MS_F=$(LIB_DIR)$(NAME)-Kinect-MS

DEMO_BASIC_F=$(BIN_DIR)Demo-Basic
DEMO_ADVANCED_F=$(BIN_DIR)Demo-Advanced
DEMO_SLIDESHOW_F=$(BIN_DIR)Demo-Slideshow
DEMO_MOVEMENT_F=$(BIN_DIR)Demo-Movement
DEMO_MANIPULATION_F=$(BIN_DIR)Demo-Manipulation

TEST_EXE=$(BIN_DIR)Test.exe
UNITTEST_EXE=$(BIN_DIR)UnitTests.exe

# - LIBRARIES -

KINECT_DIR='$(subst \,/,$(KINECTSDK10_DIR))'
CV_DIR='$(subst \,/,$(OPENCV_DIR))'
CV_LIB_DIR=$(CV_DIR)build/x86/mingw/bin/libopencv_
THIRD_PARTY_LIBS=-lKinect10 -lopencv_core241.dll -lopencv_highgui241.dll -lopencv_imgproc241.dll -lopencv_objdetect241.dll
LIBS=$(CORE_F).lib $(KINECT_MS_LIB)
UNITTEST_LIB=../UnitTest++/UnitTest.lib

# - TOOLS -

CC=g++
COPY=cp
RM=rm

# - FLAGS -

INCLUDE_FLAGS=-I $(INC_DIR) -I $(INC_DIR)Win32 -I $(KINECT_DIR)inc -I $(CV_DIR)build/include
LIB_FLAGS=-L $(CV_DIR)build/x86/mingw/lib/ -L $(KINECT_DIR)lib/x86/
CFLAGS=-DGPLUSPLUS -DBUILD -std=c++0x -c -Wall $(INCLUDE_FLAGS)

#LIBRARIES=$(CORE_F).lib $(KINECT_MS_LIB)
LIBRARIES=$(DLL_LINK_LIB)

# - TARGETS - 
all: DEMOS DEMOS_V DEMOS_D DEMOS_DV DLL DLL_V DLL_D DLL_DV

clean:
	$(RM) \
	       	$(CORE_DIR)*.o \
	       	$(KINECT_MS_DIR)*.o \
		$(DEMO_SLIDESHOW_DIR)*.o \
		$(DEMO_MOVEMENT_DIR)*.o \
		$(DEMO_MANIPULATION_DIR)*.o \
		$(TEST_DIR)*.o \
		$(UNITTEST_DIR)*.o \
		$(LIB_DIR)*.def \
		$(LIB_DIR)*.a \
		$(LIB_DIR)*.lib \
		$(LIB_DIR)*.dll \
		$(BIN_DIR)*.exe \
		$(BIN_DIR)$(NAME)*
	 
# - G++ -

# --------------- FILES -----------
# - GENERIC -
%.o: %.cpp
	$(CC) $(CFLAGS) -o $@ $<
%_v.o: %.cpp
	$(CC) -DVISUAL $(CFLAGS) -o $@ $<
%_d.o: %.cpp
	$(CC) -g $(CFLAGS) -o $@ $<
%_dv.o: %.cpp
	$(CC) -DVISUAL -g $(CFLAGS) -o $@ $<

# - STATIC LIBRARIES -
$(CORE_F)%lib: $(CORE_SOURCES:.cpp=%o) 
	ar crf $@ $^
$(KINECT_MS_F)%lib: $(KINECT_MS_SOURCES:.cpp=%o)
	ar crf $@ $^
# - DYNAMIC LIBRARIES -
$(CORE_F)%dll: $(CORE_SOURCES:.cpp=%o) $(KINECT_MS_SOURCES:.cpp=%o)
	$(CC) -o $@ -shared -Wl,--out-implib,$(dir $@)lib$(notdir $@).a,--output-def,$@.def $^ $(LIB_FLAGS) $(THIRD_PARTY_LIBS)
	$(COPY) -f $@ $(BIN_DIR)
$(CORE_F)%.a: $(CORE_F)%.dll
$(dir $(CORE_F))lib$(notdir $(CORE_F))%.dll.a: $(CORE_F)%.dll

# - DEMOS -
$(DEMO_BASIC_F)%exe: $(DEMO_BASIC_SOURCES:.cpp=%o) $(CORE_F)%lib $(KINECT_MS_F)%lib
	$(CC) -o $@ $^ $(LIB_FLAGS) $(THIRD_PARTY_LIBS)
$(DEMO_ADVANCED_F)%exe: $(DEMO_ADVANCED_SOURCES:.cpp=%o) $(CORE_F)%lib $(KINECT_MS_F)%lib
	$(CC) -o $@ $^ $(LIB_FLAGS) $(THIRD_PARTY_LIBS)
$(DEMO_SLIDESHOW_F)%exe: $(DEMO_SLIDESHOW_SOURCES:.cpp=%o) $(CORE_F)%lib $(KINECT_MS_F)%lib
	$(CC) -o $@ $^ $(LIB_FLAGS) $(THIRD_PARTY_LIBS)
$(DEMO_MOVEMENT_F)%exe: $(DEMO_MOVEMENT_SOURCES:.cpp=%o) $(CORE_F)%lib $(KINECT_MS_F)%lib
	$(CC) -o $@ $^ $(LIB_FLAGS) $(THIRD_PARTY_LIBS)
$(DEMO_MANIPULATION_F)%exe: $(DEMO_MANIPULATION_SOURCES:.cpp=%o) $(CORE_F)%lib $(KINECT_MS_F)%lib
	$(CC) -o $@ $^ $(LIB_FLAGS) $(THIRD_PARTY_LIBS)
# - TESTS -
$(TEST_EXE): $(TEST_SOURCES:.cpp=.o) $(CORE_F).dll
	$(CC) -o $@ $^ -L $(LIB_DIR) -l$(NAME)dll $(LIB_FLAGS) $(THIRD_PARTY_LIBS)
$(UNITTEST_EXE): $(UNITTEST_SOURCES:.cpp=.o) $(CORE_F).dll
	$(CC) -o $@ $^ -L $(LIB_DIR) -l$(NAME)dll $(UNITTEST_LIB) $(LIB_FLAGS) $(THIRD_PARTY_LIBS)

# --------------  FINAL --------------

# ------- COMPILE ------- 
# - CORE -
COMPILE_CORE: $(CORE_SOURCES:.cpp=.o)
COMPILE_CORE_V: $(CORE_SOURCES:.cpp=_v.o)
COMPILE_CORE_D: $(CORE_SOURCES:.cpp=_d.o)
COMPILE_CORE_DV: $(CORE_SOURCES:.cpp=_dv.o)
# - KINECT MS -
COMPILE_KINECT_MS: $(KINECT_MS_SOURCES:.cpp=.o)
COMPILE_KINECT_MS_V: $(KINECT_MS_SOURCES:.cpp=_v.o)
COMPILE_KINECT_MS_D: $(KINECT_MS_SOURCES:.cpp=_d.o)
COMPILE_KINECT_MS_DV: $(KINECT_MS_SOURCES:.cpp=_dv.o)
# - TESTS -
COMPILE_TEST: $(TEST_SOURCES:.cpp=.o)
COMPILE_UNIT: $(UNITTEST_SOURCES:.cpp=.o)
# - DEMOS -
COMPILE_DEMO_BASIC: $(DEMO_BASIC_SOURCES:.cpp=.o)
COMPILE_DEMO_BASIC: $(DEMO_BASIC_SOURCES:.cpp=_v.o)
COMPILE_DEMO_BASIC: $(DEMO_BASIC_SOURCES:.cpp=_d.o)
COMPILE_DEMO_BASIC: $(DEMO_BASIC_SOURCES:.cpp=_dv.o)
COMPILE_DEMO_ADVANCED: $(DEMO_ADVANCED_SOURCES:.cpp=.o)
COMPILE_DEMO_ADVANCED: $(DEMO_ADVANCED_SOURCES:.cpp=_v.o)
COMPILE_DEMO_ADVANCED: $(DEMO_ADVANCED_SOURCES:.cpp=_d.o)
COMPILE_DEMO_ADVANCED: $(DEMO_ADVANCED_SOURCES:.cpp=_dv.o)
COMPILE_DEMO_SLIDESHOW: $(DEMO_SLIDESHOW_SOURCES:.cpp=.o)
COMPILE_DEMO_SLIDESHOW_V: $(DEMO_SLIDESHOW_SOURCES:.cpp=_v.o)
COMPILE_DEMO_SLIDESHOW_D: $(DEMO_SLIDESHOW_SOURCES:.cpp=_d.o)
COMPILE_DEMO_SLIDESHOW_DV: $(DEMO_SLIDESHOW_SOURCES:.cpp=_dv.o)
COMPILE_DEMO_MOVEMENT: $(DEMO_MOVEMENT_SOURCES:.cpp=.o)
COMPILE_DEMO_MOVEMENT_V: $(DEMO_MOVEMENT_SOURCES:.cpp=_v.o)
COMPILE_DEMO_MOVEMENT_D: $(DEMO_MOVEMENT_SOURCES:.cpp=_d.o)
COMPILE_DEMO_MOVEMENT_DV: $(DEMO_MOVEMENT_SOURCES:.cpp=_dv.o)
COMPILE_DEMO_MANIPULATION: $(DEMO_MANIPULATION_SOURCES:.cpp=.o)
COMPILE_DEMO_MANIPULATION_V: $(DEMO_MANIPULATION_SOURCES:.cpp=_v.o)
COMPILE_DEMO_MANIPULATION_D: $(DEMO_MANIPULATION_SOURCES:.cpp=_d.o)
COMPILE_DEMO_MANIPULATION_DV: $(DEMO_MANIPULATION_SOURCES:.cpp=_dv.o)
COMPILE_DEMOS: COMPILE_DEMO_BASIC COMPILE_DEMO_ADVANCED COMPILE_DEMO_SLIDESHOW DEMO_MOVEMENT DEMO_MANIPULATION
COMPILE_DEMOS_V: COMPILE_DEMO_BASIC_V COMPILE_DEMO_ADVANCED_V COMPILE_DEMO_SLIDESHOW_V DEMO_MOVEMENT_V DEMO_MANIPULATION_V
COMPILE_DEMOS_D: COMPILE_DEMO_BASIC_D COMPILE_DEMO_ADVANCED_D COMPILE_DEMO_SLIDESHOW_D DEMO_MOVEMENT_D DEMO_MANIPULATION_D
COMPILE_DEMOS_DV: COMPILE_DEMO_BASIC_DV COMPILE_DEMO_ADVANCED_DV COMPILE_DEMO_SLIDESHOW_DV DEMO_MOVEMENT_DV DEMO_MANIPULATION_DV
# - FULL -
COMPILE: COMPILE_API COMPILE_KINECT_MS COMPILE_TEST COMPILE_UNIT DEMOS
COMPILE_V: COMPILE_API_V COMPILE_KINECT_MS_V COMPILE_TEST COMPILE_UNIT DEMOS_V
COMPILE_D: COMPILE_API_D COMPILE_KINECT_MS_D COMPILE_TEST COMPILE_UNIT DEMOS_D
COMPILE_DV: COMPILE_API_DV COMPILE_KINECT_MS_DV COMPILE_TEST COMPILE_UNIT DEMOS_DV

# ------- LINK -------
# - CORE -
LIB_CORE: $(CORE_F).lib
LIB_CORE_V: $(CORE_F)_v.lib
LIB_CORE_D: $(CORE_F)_d.lib
LIB_CORE_DV: $(CORE_F)_dv.lib
DLL: $(CORE_F).dll
DLL_V: $(CORE_F)_v.dll
DLL_D: $(CORE_F)_d.dll
DLL_DV: $(CORE_F)_dv.dll
# - MS -
LIB_KINECT_MS: $(KINECT_MS_F).lib
LIB_KINECT_MS_V: $(KINECT_MS_F)_v.lib
LIB_KINECT_MS_D: $(KINECT_MS_F)_d.lib
LIB_KINECT_MS_DV: $(KINECT_MS_F)_dv.lib
# - BOTH -
LIB: LIB_CORE LIB_KINECT_MS
LIB_V: LIB_CORE_V LIB_KINECT_MS_V
LIB_D: LIB_CORE_D LIB_KINECT_MS_D
LIB_DV: LIB_CORE_DV LIB_KINECT_MS_DV
# - TEST -
TEST: $(TEST_EXE) 
UNIT: $(UNITTEST_EXE)
# - DEMOS -
DEMO_BASIC: $(DEMO_BASIC_F).exe
DEMO_BASIC_V: $(DEMO_BASIC_F)_v.exe
DEMO_BASIC_D: $(DEMO_BASIC_F)_d.exe
DEMO_BASIC_DV: $(DEMO_BASIC_F)_dv.exe
DEMO_ADVANCED: $(DEMO_ADVANCED_F).exe
DEMO_ADVANCED_V: $(DEMO_ADVANCED_F)_v.exe
DEMO_ADVANCED_D: $(DEMO_ADVANCED_F)_d.exe
DEMO_ADVANCED_DV: $(DEMO_ADVANCED_F)_dv.exe
DEMO_SLIDESHOW: $(DEMO_SLIDESHOW_F).exe
DEMO_SLIDESHOW_V: $(DEMO_SLIDESHOW_F)_v.exe
DEMO_SLIDESHOW_D: $(DEMO_SLIDESHOW_F)_d.exe
DEMO_SLIDESHOW_DV: $(DEMO_SLIDESHOW_F)_dv.exe
DEMO_MOVEMENT: $(DEMO_MOVEMENT_F).exe
DEMO_MOVEMENT_V: $(DEMO_MOVEMENT_F)_v.exe
DEMO_MOVEMENT_D: $(DEMO_MOVEMENT_F)_d.exe
DEMO_MOVEMENT_DV: $(DEMO_MOVEMENT_F)_dv.exe
DEMO_MANIPULATION: $(DEMO_MANIPULATION_F).exe
DEMO_MANIPULATION_V: $(DEMO_MANIPULATION_F).exe
DEMO_MANIPULATION_D: $(DEMO_MANIPULATION_F)_d.exe
DEMO_MANIPULATION_DV: $(DEMO_MANIPULATION_F)_dv.exe
DEMOS: DEMO_BASIC DEMO_ADVANCED DEMO_SLIDESHOW DEMO_MOVEMENT DEMO_MANIPULATION
DEMOS_V: DEMO_BASIC_V DEMO_ADVANCED_V DEMO_SLIDESHOW_V DEMO_MOVEMENT_V DEMO_MANIPULATION_V
DEMOS_D: DEMO_BASIC_D DEMO_ADVANCED_D DEMO_SLIDESHOW_D DEMO_MOVEMENT_D DEMO_MANIPULATION_D
DEMOS_DV: DEMO_BASIC_DV DEMO_ADVANCED_DV DEMO_SLIDESHOW_DV DEMO_MOVEMENT_DV DEMO_MANIPULATION_DV

# ------- RUN -------
TEST_RUN: TEST
	$(TEST_EXE)
UNIT_RUN: UNIT
	$(UNITTEST_EXE)
RUN_DEMO_BASIC: DEMO_BASIC_V
	$(DEMO_BASIC__F)
RUN_DEMO_ADVANCED: DEMO_ADVANCED_V
	$(DEMO_ADVANCED__F)
RUN_DEMO_SLIDESHOW: DEMO_SLIDESHOW_V
	$(DEMO_SLIDESHOW__F)_v.exe Img/1.jpg Img/2.jpg Img/3.jpg Img/4.jpg Img/5.jpg Img/6.jpg
RUN_DEMO_MOVEMENT: DEMO_MOVEMENT_V
	$(DEMO_MOVEMENT_F)_v.exe
RUN_DEMO_MANIPULATION: DEMO_MANIPULATION_V
	$(DEMO_MANIPULATION_F)_v.exe

# - MSVC
$(CORE_LIB_MS): $(CORE_DEF)
	lib /machine:i386 /def:$<
$(TEST_EXE_MS): $(CORE_LIB_MS)
	cl /I $(INC_DIR) /I "C:\Program Files\Microsoft SDKs\Kinect\v1.0\inc" Main.cpp $^
